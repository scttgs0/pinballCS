
; SPDX-FileName: system_f256.equ
; SPDX-FileCopyrightText: Copyright 2023, Scott Giese
; SPDX-License-Identifier: GPL-3.0-or-later


;--------------------------------------
; System Equates for Foenix F256 JR/K
;--------------------------------------

MMU_CTRL                = $0000
mmuPage0            = $00
mmuPage1            = $01
mmuPage2            = $02
mmuPage3            = $03
mmuEditPage0        = $00
mmuEditPage1        = $10
mmuEditPage2        = $20
mmuEditPage3        = $30
mmuEditMode         = $80

; - - - - - - - - - - - - - - - - - - -

MMU_Block0              = $0008
MMU_Block1              = $0009
MMU_Block2              = $000A
MMU_Block3              = $000B
MMU_Block4              = $000C
MMU_Block5              = $000D
MMU_Block6              = $000E
MMU_Block7              = $000F

;--------------------------------------

IOPAGE_CTRL             = $0001
iopPage0            = $00               ; system
iopPage1            = $01               ; charset, gfx LUT
iopPage2            = $02               ; text map
iopPage3            = $03               ; text color map
iopDisable          = $04


;--------------------------------------
;--------------------------------------
;   IO Bank 01
;--------------------------------------

FONT_MEMORY_BANK0       = $C000         ; [C000:C7FF]
FONT_MEMORY_BANK1       = $C800         ; [C800:CFFF]

;--------------------------------------

GRPH_LUT0_PTR	        = $D000         ; [D000:D3FF]
GRPH_LUT1_PTR	        = $D400         ; [D400:D7FF]
GRPH_LUT2_PTR	        = $D800         ; [D800:DBFF]
GRPH_LUT3_PTR	        = $DC00         ; [DC00:DFFF]


;--------------------------------------
;--------------------------------------
;   IO Bank 02
;--------------------------------------

CS_TEXT_MEM_PTR         = $C000         ; [C000:DFFF]   ascii code for text character


;--------------------------------------
;--------------------------------------
;   IO Bank 03
;--------------------------------------
CS_COLOR_MEM_PTR        = $C000         ; [C000:DFFF]   HiNibble = Foreground; LoNibble = Background
                                        ;               0-15 = index into the CHAR_LUT tables


;--------------------------------------
;--------------------------------------
;   IO Bank 00
;--------------------------------------

MASTER_CTRL_L           = $D000
mcTextOn            = $01               ; Enable Text Mode
mcOverlayOn         = $02               ; Overlay Text on top of Graphics (Text Background Color is transparent)
mcGraphicsOn        = $04               ; Enable Graphic Mode
mcBitmapOn          = $08               ; Enable the Bitmap Module
mcTileMapOn         = $10               ; Enable the Tile Module
mcSpriteOn          = $20               ; Enable the Sprite Module
mcGammaOn           = $40               ; Enable Gamma Correction

MASTER_CTRL_H           = $D001
mcVideoMode240      = $00               ; 0 - 80x60 (Clock @ 60Mhz)                    - Text Mode
                                        ; 0 - 320x240 w/pixel-doubling (Clock @ 60Mhz) - Graphics Mode
mcVideoMode200      = $01               ; 1 - 80x50 (Clock @ 70Mhz)                    - Text Mode
                                        ; 1 - 320x200 w/pixel-doubling (Clock @ 70Mhz) - Graphics Mode
mcTextDoubleX       = $02               ; X Pixel Doubling - Text Mode only
mcTextDoubleY       = $04               ; Y Pixel Doubling - Text Mode only
mcDisableVideo      = $08               ; [rev B] Disable the scanning of the video (hence giving 100% bandwidth to the CPU)
mcTransparent       = $10               ; [rev B]
mcFontSet1          = $20

;--------------------------------------

LAYER_ORDER_CTRL_0      = $D002
locLayer0_BM0       = $00
locLayer0_BM1       = $01
locLayer0_BM2       = $02
locLayer0_TL0       = $04
locLayer0_TL1       = $05
locLayer0_TL2       = $06

locLayer1_BM0       = $00
locLayer1_BM1       = $10
locLayer1_BM2       = $20
locLayer1_TL0       = $40
locLayer1_TL1       = $50
locLayer1_TL2       = $60

LAYER_ORDER_CTRL_1      = $D003
locLayer2_BM0       = $00
locLayer2_BM1       = $01
locLayer2_BM2       = $02
locLayer2_TL0       = $04
locLayer2_TL1       = $05
locLayer2_TL2       = $06

;--------------------------------------

BORDER_CTRL             = $D004         ; Bit[0] - Enable (1 by default)
bcEnable            = $01               ; Bit[4..6]: X Scroll Offset (Will scroll Left)

BORDER_COLOR_B          = $D005
BORDER_COLOR_G          = $D006
BORDER_COLOR_R          = $D007

BORDER_SIZE_X           = $D008         ; Values: 0 - 31 (Default: 31)
BORDER_SIZE_Y           = $D009         ; Values: 0 - 31 (Default: 31)

;--------------------------------------

BACKGROUND_COLOR_B      = $D00D         ; When in Graphic Mode, if a pixel is "0" then the background pixel is chosen
BACKGROUND_COLOR_G      = $D00E
BACKGROUND_COLOR_R      = $D00F

;--------------------------------------

CURSOR_CTRL             = $D010         ; Bit[0] enable, Bit[1..2] flash rate, Bit[3] no flash
ccEnable            = $01
ccFlashRate1000     = $00
ccFlashRate500      = $02
ccFlashRate250      = $04
ccFlashRate200      = $06
ccNoFlash           = $08

CURSOR_CHAR_CODE        = $D012
CURSOR_X                = $D014         ; [word]
CURSOR_Y                = $D016         ; [word]

;--------------------------------------

; Line Interrupt (SOL)
LINE_IRQ_CTRL           = $D018         ; [W] Bit[0] - Enable
licEnable       = $01

LINE_IRQ_VALUE          = $D019         ; [W] [word] Write Only Bits[11:0]

RASTER_X                = $D018         ; [R] [word] pixel displacement on raster line Bits[11:0]
RASTER_Y                = $D01A         ; [R] [word] raster line Bits[11:0]

;--------------------------------------

BITMAP0_CTRL            = $D100
bmcEnable           = $01
bmcLUT0             = $00
bmcLUT1             = $02
bmcLUT2             = $04
bmcLUT3             = $06

BITMAP0_ADDR            = $D101         ; [long] Bits[18:0]

BITMAP1_CTRL            = $D108
BITMAP1_ADDR            = $D109         ; [long] Bits[18:0]

BITMAP2_CTRL            = $D110
BITMAP2_ADDR            = $D111         ; [long] Bits[18:0]

;--------------------------------------

TILE0_CTRL              = $D200
tcEnable            = $01
tcSmallTiles        = $10
TILE0_ADDR              = $D201         ; [long] Bits[18:0]
TILE0_SIZE_X            = $D204         ; [word]
TILE0_SIZE_Y            = $D206         ; [word]

TILE0_SCROLL_X          = $D208         ; [word] Bits[13:4] Tile #
                                        ;        Bits[3:0] Scroll Position (16x16 tiles)
                                        ;        Bits[3:1] Scroll Position (8x8 tiles)
                                        ;        Bit[15] Scroll Direction

TILE0_SCROLL_Y          = $D20A         ; [word] Bits[13:4] Tile #
                                        ;        Bits[3:0] Scroll Position (16x16 tiles)
                                        ;        Bits[3:1] Scroll Position (8x8 tiles)
                                        ;        Bit[15] Scroll Direction

TILE1_CTRL              = $D20C
TILE1_ADDR              = $D20D
TILE1_SIZE_X            = $D210
TILE1_SIZE_Y            = $D212
TILE1_SCROLL_X          = $D214
TILE1_SCROLL_Y          = $D216

TILE2_CTRL              = $D218
TILE2_ADDR              = $D219
TILE2_SIZE_X            = $D21C
TILE2_SIZE_Y            = $D21E
TILE2_SCROLL_X          = $D220
TILE2_SCROLL_Y          = $D222

TILESET0_ADDR           = $D280         ; [long] Bits[18:0]
TILESET0_CTRL           = $D283
tsVertical          = $00
tsSquare            = $08

TILESET1_ADDR           = $D284         ; [long] Bits[18:0]
TILESET1_CTRL           = $D287

TILESET2_ADDR           = $D288         ; [long] Bits[18:0]
TILESET2_CTRL           = $D28B

TILESET3_ADDR           = $D28C         ; [long] Bits[18:0]
TILESET3_CTRL           = $D28F

TILESET4_ADDR           = $D290         ; [long] Bits[18:0]
TILESET4_CTRL           = $D293

TILESET5_ADDR           = $D294         ; [long] Bits[18:0]
TILESET5_CTRL           = $D297

TILESET6_ADDR           = $D298         ; [long] Bits[18:0]
TILESET6_CTRL           = $D29B

TILESET7_ADDR           = $D29C         ; [long] Bits[18:0]
TILESET7_CTRL           = $D29F

;--------------------------------------

XY_BASE_ADDR            = $D301         ; [long] [W] Bits[17:0]
XY_POS_X                = $D304
XY_POS_Y                = $D306

XY_OFFSET               = $D308         ; [word] [R]
XY_BANK                 = $D30A         ; [R]
XY_ADDR                 = $D30B         ; [long] [R] Bits[17:0]

;--------------------------------------

sidAttack2ms        = 0
sidAttack8ms        = 1
sidAttack16ms       = 2
sidAttack24ms       = 3
sidAttack38ms       = 4
sidAttack56ms       = 5
sidAttack68ms       = 6
sidAttack80ms       = 7
sidAttack100ms      = 8
sidAttack250ms      = 9
sidAttack500ms      = 10
sidAttack800ms      = 11
sidAttack1s         = 12
sidAttack3s         = 13
sidAttack5s         = 14
sidAttack8s         = 15

sidDecay6ms         = 0
sidDecay24ms        = 1
sidDecay48ms        = 2
sidDecay72ms        = 3
sidDecay114ms       = 4
sidDecay168ms       = 5
sidDecay204ms       = 6
sidDecay240ms       = 7
sidDecay300ms       = 8
sidDecay750ms       = 9
sidDecay1500ms      = 10
sidDecay2400ms      = 11
sidDecay3s          = 12
sidDecay9s          = 13
sidDecay14s         = 14
sidDecay24s         = 15

; - - - - - - - - - - - - - - - - - - -

SID1_BASE               = $D400
SID1_FREQ1              = $D400         ; [word] range[$0000:FFFF] (0-8192Hz)  F=(W/8) Hz
SID1_PULSE1             = $D402         ; [word; 12-bits]
SID1_CTRL1              = $D404
sidcGate           = $01                ; [when=1,ADS begins][when=0,Release begins]
sidcSync           = $02                ; tie with Voice 3
sidcRing           = $04                ; tie with Voice 3
sidcTest           = $08                ; [when=1,locked]
sidcTri            = $10
sidcSaw            = $20
sidcPulse          = $40
sidcNoise          = $80
SID1_ATDCY1             = $D405         ; bits [4:7]=Attack (range[2ms:8s]); bits [0:3]=Decay (range[6ms:24s])
SID1_SUREL1             = $D406         ; bits [4:7]=Sustain (range[0:15]=[0:100%]); bits [0:3]=Release (range[6ms:24s])

SID1_FREQ2              = $D407         ; [word]
SID1_PULSE2             = $D409         ; [word]
SID1_CTRL2              = $D40B
SID1_ATDCY2             = $D40C
SID1_SUREL2             = $D40D

SID1_FREQ3              = $D40E         ; [word]
SID1_PULSE3             = $D410         ; [word]
SID1_CTRL3              = $D412
SID1_ATDCY3             = $D413
SID1_SUREL3             = $D414

SID1_CUTOFF             = $D415         ; [word; 11-bits]  F=(30+W*5.8) Hz
SID1_RESON              = $D417
sidrFilterV1        = $01
sidrFilterV2        = $02
sidrFilterV3        = $04
sidrFilterExt       = $08
sidrFreq            = $F0               ; bits [4-7]=range[0:15]
SID1_SIGVOL             = $D418
sidvVolume          = $0F               ; bits [0:3]=range[0:15]
sidvLowpass         = $10
sidvBandpass        = $20
sidvHighpass        = $40
sidvV3              = $80               ; [when=0,Voice 3 is OFF]
SID1_NOISE              = $D41B         ; [read-only]
SID1_ENV3               = $D41C         ; [read-only]

; - - - - - - - - - - - - - - - - - - -

SID2_BASE               = $D500
SID2_FREQ1              = $D500         ; [word]
SID2_PULSE1             = $D502         ; [word]
SID2_CTRL1              = $D504
SID2_ATDCY1             = $D505
SID2_SUREL1             = $D506

SID2_FREQ2              = $D507         ; [word]
SID2_PULSE2             = $D509         ; [word]
SID2_CTRL2              = $D50B
SID2_ATDCY2             = $D50C
SID2_SUREL2             = $D50D

SID2_FREQ3              = $D50E         ; [word]
SID2_PULSE3             = $D510         ; [word]
SID2_CTRL3              = $D512
SID2_ATDCY3             = $D513
SID2_SUREL3             = $D514

SID2_CUTOFF             = $D515         ; [word]
SID2_RESON              = $D517
SID2_SIGVOL             = $D518
SID2_NOISE              = $D51B         ; [read-only]
SID2_ENV3               = $D51C         ; [read-only]

;--------------------------------------

PSG1_BASE               = $D600
PSG2_BASE               = $D610
PSG_DUAL_BASE           = $D608
psgT1_FREQ          = $00
psgT1_ATTN          = $01
psgT2_FREQ          = $02
psgT2_ATTN          = $03
psgT3_FREQ          = $04
psgT3_ATTN          = $05
psgNOISE_CTRL       = $06
psgNOISE_ATTN       = $07

;--------------------------------------

UART_DATA               = $D630
UART_IER                = $D631
UART_ISR                = $D632
UART_FCR                = $D632
UART_LCR                = $D633
UART_MCR                = $D634
UART_LSR                = $D635
UART_MSR                = $D636
UART_SPR                = $D637

UART_DLL                = $D630
UART_DLH                = $D631
UART_PSD                = $D632

;--------------------------------------

PS2_CTRL                = $D640
ps2KeybdWrite       = $02
ps2MouseWrite       = $08
ps2KeybdClear       = $10
ps2MouseClear       = $20

PS2_OUT                 = $D641
PS2_KEYBD_IN            = $D642
PS2_MOUSE_IN            = $D643

PS2_STATUS              = $D644
ps2KeybdEmpty       = $01
ps2MouseEmpty       = $02
ps2MouseErr         = $10
ps2MouseAck         = $20
ps2KeybdErr         = $40
ps2KeybdAck         = $80

;--------------------------------------

TIMER0_CTRL             = $D650         ; [write-only]
tmrcDown            = $00
tmrcEnable          = $01
tmrcClear           = $02
tmrcLoad            = $04
tmrcUp              = $08

TIMER0_STATUS           = $D650         ; [read-only]
tmrsNotEqual        = $00
tmrsEqual           = $01

TIMER0_VALUE            = $D651         ; [long]
TIMER0_CMP_CTRL         = $D654
tmrccClear          = $01
tmrccLoad           = $02

TIMER0_CMP              = $D655         ; [long]

TIMER1_CTRL             = $D658         ; [write-only]
TIMER1_STATUS           = $D658         ; [read-only]
TIMER1_VALUE            = $D659         ; [long]
TIMER1_CMP_CTRL         = $D65C
TIMER1_CMP              = $D65D         ; [long]

;--------------------------------------

INT_PENDING_REG0        = $D660
INT00_SOF           = $01
INT00_SOL           = $02
INT00_PS2_KBD       = $04
INT00_PS2_MOUSE     = $08
INT00_TIMER0        = $10
INT00_TIMER1        = $20
INT00_DMA           = $40
INT00_CARTRIDGE     = $80

INT_PENDING_REG1        = $D661
INT01_UART          = $01
INT01_COLL0         = $02
INT01_COLL1         = $04
INT01_COLL2         = $08
INT01_RTC           = $10
INT01_VIA0          = $20
INT01_VIA1          = $40
INT01_SDC           = $80

INT_PENDING_REG2        = $D662
INT02_DATA          = $01
INT02_CLK           = $02
INT02_ATN           = $04
INT02_SREC          = $08

INT_POL_REG0            = $D664
INT_POL_REG1            = $D665
INT_POL_REG2            = $D666

INT_EDGE_REG0           = $D668
INT_EDGE_REG1           = $D669
INT_EDGE_REG2           = $D66A

INT_MASK_REG0           = $D66C
INT_MASK_REG1           = $D66D
INT_MASK_REG2           = $D66E

;--------------------------------------

DIP_SWITCH              = $D670

;--------------------------------------

IEC_PORT_IN             = $D680
iecI_DATA           = $01
iecI_CLK            = $02
iecI_ATN            = $10
iecI_SREQ           = $80

IEC_PORT_OUT            = $D681
iecO_DATA           = $01
iecO_CLK            = $02
iecO_ATN            = $10
iecO_NMI_EN         = $20
iecO_RST            = $40
iecO_SREQ           = $80

;--------------------------------------

RTC_SEC                 = $D690
RTC_SEC_ALARM           = $D691
RTC_MIN                 = $D692
RTC_MIN_ALARM           = $D693
RTC_HRS                 = $D694
RTC_HRS_ALARM           = $D695
RTC_DAY                 = $D696
RTC_DAY_ALARM           = $D697
RTC_DOW                 = $D698
RTC_MON                 = $D699
RTC_YEAR                = $D69A
RTC_RATE                = $D69B
RTC_EN                  = $D69C
RTC_FLAG                = $D69D
RTC_CTRL                = $D69E
RTC_CENT                = $D69F

;--------------------------------------

RNG_DAT                 = $D6A4         ; [word] [read-only]    16Bit RNG Generator
RNG_SEED                = $D6A4         ; [word] [write-only]   16Bit RNG Generator
RNG_CTRL                = $D6A6         ; [write-only]
rcEnable        = $01                   ; Enable the LFSR BLOCK_LEN
rcDV            = $02                   ; After setting the Seed value, Toggle this bit for it be registered

;--------------------------------------

MACHINE_ID              = $D6A7         ; [read-only]
macC256_FMX         = $00
macC256_U           = $01
macF256_JR          = $02
macC256_GENX        = $04
macC256_UPLUS       = $05
macA2560U_PLUS      = $06
macA2560X           = $08
macA2560U           = $09
macA2560M           = $0A
macA2560K           = $0B
macF256K            = $12

;--------------------------------------

LED_POWER_B             = $D6A7         ; [write-only]
LED_POWER_G             = $D6A8
LED_POWER_R             = $D6A9

LED_MEDIA_B             = $D6AA
LED_MEDIA_G             = $D6AB
LED_MEDIA_R             = $D6AC

LED_SHIFTLOCK_B         = $D6AD
LED_SHIFTLOCK_G         = $D6AE
LED_SHIFTLOCK_R         = $D6AF

;--------------------------------------

MOUSE_CTRL              = $D6E0
mcEnable            = $01
mcLegacyMode        = $02

MOUSE_X                 = $D6E2         ; [word]
MOUSE_Y                 = $D6E4         ; [word]
MOUSE_PACKET            = $D6E6         ; [long] [legacy mode only]

;--------------------------------------

C256F_MODEL_MAJOR       = $D70B
C256F_MODEL_MINOR       = $D70C

;--------------------------------------

FG_CHAR_LUT_PTR         = $D800         ; 16 entries = ARGB     $008060FF (medium slate blue)
                                        ;                       $00108020 (la salle green)
BG_CHAR_LUT_PTR         = $D840         ; 16 entries = ARGB

;--------------------------------------

SPRITE_BASE             = $D900

; SP00_CTRL             = $D900         ; [write-only]
scEnable            = $01
scLUT0              = $00
scLUT1              = $02
scLUT2              = $04
scLUT3              = $06

scDEPTH0            = $00
scDEPTH1            = $08
scDEPTH2            = $10
scDEPTH3            = $18

scSIZE_32           = $00
scSIZE_24           = $20
scSIZE_16           = $40
scSIZE_8            = $60

; SP00_ADDR             = $D901         ; [write-only] [long] Bits[18:0]
; SP00_X                = $D904         ; [write-only] [word]
; SP00_Y                = $D906         ; [write-only] [word]

; SP01_CTRL             = $D908         ; [write-only]
; SP01_ADDR             = $D909         ; [write-only]
; SP01_X                = $D90C         ; [write-only]
; SP01_Y                = $D90E         ; [write-only]

; SP02_CTRL             = $D910         ; [write-only]
; SP02_ADDR             = $D911         ; [write-only]
; SP02_X                = $D914         ; [write-only]
; SP02_Y                = $D916         ; [write-only]

; SP03_CTRL             = $D918         ; [write-only]
; SP03_ADDR             = $D919         ; [write-only]
; SP03_X                = $D91C         ; [write-only]
; SP03_Y                = $D91E         ; [write-only]

;...

; SP63_CTRL             = $DAF8         ; [write-only]
; SP63_ADDR             = $DAF9         ; [write-only]
; SP63_X                = $DAFC         ; [write-only]
; SP63_Y                = $DAFE         ; [write-only]

;--------------------------------------

LUTBkColor          = 0
LUTPfColor0         = 1
LUTPfColor1         = 2
LUTPfColor2         = 3
LUTPfColor3         = 4
LUTPfColor4         = 5
LUTPfColor5         = 6
LUTPfColor6         = 7
LUTPfColor7         = 8
LUTSprColor0        = 9
LUTSprColor1        = 10
LUTSprColor2        = 11
LUTSprColor3        = 12
LUTSprColor4        = 13
LUTSprColor5        = 14
LUTSprColor6        = 15
LUTSprColor7        = 16

;--------------------------------------
;   VIA #1 (F256K only)

VIA1_IO_PORTB           = $DB00
VIA1_IO_PORTA           = $DB01
VIA1_DD_PORTB           = $DB02
VIA1_DD_PORTA           = $DB03
vddInput            = $00
vddOuput            = $FF
VIA1_COUNT_TIMER1       = $DB04         ; [word]
VIA1_LATCH_TIMER1       = $DB06         ; [word]
VIA1_COUNT_TIMER2       = $DB08         ; [word]
VIA1_SDR                = $DB0A
VIA1_ACR                = $DB0B
vacLatchEnableA     = $01
vacLatchEnableB     = $02
VIA1_PCR                = $DB0C
VIA1_IFR                = $DB0D
VIA1_IER                = $DB0E
VIA1_IO2_PORTA          = $DB0F

;--------------------------------------
;   VIA #0

VIA0_IO_PORTB           = $DC00
VIA0_IO_PORTA           = $DC01
VIA0_DD_PORTB           = $DC02
VIA0_DD_PORTA           = $DC03
VIA0_COUNT_TIMER1       = $DC04         ; [word]
VIA0_LATCH_TIMER1       = $DC06         ; [word]
VIA0_COUNT_TIMER2       = $DC08         ; [word]
VIA0_SDR                = $DC0A
VIA0_ACR                = $DC0B
VIA0_PCR                = $DC0C
VIA0_IFR                = $DC0D
VIA0_IER                = $DC0E
VIA0_IO2_PORTA          = $DC0F

; - - - - - - - - - - - - - - - - - - -

JOYSTICK0               = $DC00         ; (R) Joystick 0
JOYSTICK1               = $DC01
joyNONE             = $0F
joyUP               = $01               ;           1110            bit-0   UP
joyDOWN             = $02               ;      1010   |   0110      bit-1   DOWN
joyLEFT             = $04               ;          \  |  /          bit-2   LEFT
joyRIGHT            = $08               ;   1011----1111----0111    bit-3   RIGHT
joyButton0          = $10               ;          /  |  \
joyButton1          = $20               ;      1001   |   0101
joyButton2          = $40               ;           1101

;--------------------------------------

SDC_CTRL                = $DD00
SDC_DATA                = $DD01

;--------------------------------------

MULU_A                  = $DE00         ; [word]
MULU_B                  = $DE02         ; [word]
MULU_RESULT             = $DE10         ; [dword]

DIVU_DENOM              = $DE04         ; [word]
DIVU_NUMR               = $DE06         ; [word]
DIVU_RESULT             = $DE14         ; [dword]
DIVU_RESULT_Q           = $DE14         ; [word]
DIVU_RESULT_R           = $DE16         ; [word]

ADD_A                   = $DE08         ; [dword]
ADD_B                   = $DE0C         ; [dword]
ADD_RESULT              = $DE18         ; [dword]

;--------------------------------------

DMA_CTRL                = $DF00         ; DMA Control Register
dmaDisable      = $00
dmaEnable       = $01                   ; DMA Engine is enabled
dma2D           = $02                   ; DMA 2D operation (otherwise it is 1D)
dmaFill         = $04                   ; DMA Fill operation (otherwise DMA Copy)
dmaIntEnable    = $08                   ; Enable DMA interrupts
dmaStart        = $80                   ; Start the DMA operation

DMA_STATUS              = $DF01         ; [read-only]   DMA status
dmaBusy         = $80                   ; DMA Engine is busy with an operation

DMA_FILL_VAL            = $DF01         ; Byte value to use for Fill operations

DMA_SRC_ADDR            = $DF04         ; Source address (system bus) for Copy operations
DMA_DST_ADDR            = $DF08         ; Destination address (system bus) for Fill/Copy operations

;   1D operations
DMA_COUNT               = $DF0C         ; [long]    Number of bytes to fill or copy

;   2D operations
DMA_WIDTH               = $DF0C         ; [word]    Width of rectangle to fill or copy
DMA_HEIGHT              = $DF0E         ; [word]    Height of rectangle to fill or copy
DMA_STRIDE_SRC          = $DF10         ; [word]    Width of the source bitmap image (bytes)
DMA_STRIDE_DST          = $DF12         ; [word]    Width of the destination bitmap image (bytes)

;--------------------------------------

vecCOP                  = $FFF4         ; [word]
vecABORT                = $FFF8         ; [word]
vecNMI                  = $FFFA         ; [word]
vecRESET                = $FFFC         ; [word]
vecIRQ_BRK              = $FFFE         ; [word]

